/* Generated By:JJTree: Do not edit this line. ASTPDerive.java */

package math4u2.parser.formulaold.parserNodes;

import math4u2.view.formula.*;
import math4u2.view.layout.IndexLayout;
import math4u2.parser.formulaold.*;
import math4u2.view.formula.AtomicBox;
/**
 * Klasse für partielle Ableitungen
 * 
 * @author Christoph Beckmann
 */

public class ASTPDerive extends SimpleNode {
    public ASTPDerive(int id) {
        super(id);
    }

    public ASTPDerive(fsParser p, int id) {
        super(p, id);
    }

    public void setName(String symbol) {
        super.symbol = symbol;
    }

    /*
     * (non-Javadoc)
     * 
     * @see math4u2.view.parser.SimpleNode#bakeComponents(math4u2.view.formula.AtomicBox)
     */
    public void bakeComponents(AtomicBox ab) {
        InnerBox ib = new InnerBox(ab.getRenderContext());
        ContainerBox up = new ContainerBox(ab.getRenderContext());
        IndexedBox par_2 = new IndexedBox(ab.getRenderContext());
        par_2.add(new OrdBox(ab.getRenderContext(), "&part;"), IndexLayout.CENTER);
        par_2.add(new OrdBox(ab.getRenderContext(), "2"), IndexLayout.RIGHT_TOP);
        up.add(par_2);
        ib.add(up);
        ContainerBox down = new ContainerBox(ab.getRenderContext());
        down.add(new OrdBox(ab.getRenderContext(), "&part;"));
        jjtGetChild(1).bakeComponents(down);
        down.add(new OrdBox(ab.getRenderContext(), "&part;"));
        jjtGetChild(2).bakeComponents(down);
        ib.add(down);
        ab.add(ib);
        BracketedBox bb = new BracketedBox(ab.getRenderContext());
        jjtGetChild(0).bakeComponents(bb);
        ab.add(bb);

    }

}