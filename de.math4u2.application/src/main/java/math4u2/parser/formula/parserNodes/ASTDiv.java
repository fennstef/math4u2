/* Generated By:JJTree: Do not edit this line. ASTDiv.java */

package math4u2.parser.formula.parserNodes;

import math4u2.view.formula.*;
import math4u2.parser.formula.*;

/**
 * Klasse für Brüche.
 * 
 * @author Christoph Beckmann
 *  
 */

public class ASTDiv extends SimpleNode {

    public ASTDiv(int id) {
        super(id);
    }

    public ASTDiv(fsParser p, int id) {
        super(p, id);
    }

    /*
     * (non-Javadoc)
     * 
     * @see math4u2.view.parser.SimpleNode#bakeComponents(math4u2.view.parser.Node)
     */
    public void bakeComponents(AtomicBox ab) {
        InnerBox ib = new InnerBox(ab.getRenderContext());
        Node n0 = jjtGetChild(0);
        if (n0 instanceof ASTBrackets) {
            if(!((ASTBrackets)n0).getSymbol().equals("|")){
                n0 = n0.jjtGetChild(0);
            }
        }
        Node n1 = jjtGetChild(1);
        if (n1 instanceof ASTBrackets) {
            if(!((ASTBrackets)n1).getSymbol().equals("|")){
                n1= n1.jjtGetChild(0);
            }
        }
        ContainerBox cb0 = new ContainerBox(ab.getRenderContext());
        n0.bakeComponents(cb0);
        ContainerBox cb1 = new ContainerBox(ab.getRenderContext());
        n1.bakeComponents(cb1);
        ib.add(cb0);
        ib.add(cb1);
        ab.add(ib);

    }

    /* (non-Javadoc)
     * @see math4u2.parser.formula.parserNodes.SimpleNode#toString()
     */
    public String toString() {
        return jjtGetChild(0).toString()+"/"+jjtGetChild(1).toString();
    }

}