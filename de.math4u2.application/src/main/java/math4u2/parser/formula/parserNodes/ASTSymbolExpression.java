package math4u2.parser.formula.parserNodes;

import math4u2.view.formula.AtomicBox;
import math4u2.parser.formula.*;

/* Generated By:JJTree: Do not edit this line. ASTNablaExpression.java */

public class ASTSymbolExpression extends SimpleNode {
    public ASTSymbolExpression(int id) {
        super(id);
    }

    public ASTSymbolExpression(fsParser p, int id) {
        super(p, id);
    }

    /*
     * (non-Javadoc)
     * 
     * @see math4u2.view.parser.SimpleNode#bakeComponents(math4u2.view.parser.Node)
     */
    public void bakeComponents(AtomicBox ab) {
        for (int i = 0; i < children.length; i++) {
            jjtGetChild(i).bakeComponents(ab);
        }
    }

    /* (non-Javadoc)
     * @see math4u2.parser.formula.parserNodes.SimpleNode#toString()
     */
    public String toString() {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < children.length; i++) {
            sb.append(jjtGetChild(i).toString());
        }
        return sb.toString();
    }

}