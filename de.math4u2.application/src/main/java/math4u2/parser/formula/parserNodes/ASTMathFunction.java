/* Generated By:JJTree: Do not edit this line. ASTMathFunction.java */

package math4u2.parser.formula.parserNodes;

import math4u2.view.formula.*;
import math4u2.view.layout.IndexLayout;
import math4u2.parser.formula.*;

/**
 * Klasse für die Funktionen sin, cos, tan, log
 * 
 * @author Christoph Beckmann
 * 
 */

public class ASTMathFunction extends SimpleNode {
    public ASTMathFunction(int id) {
        super(id);
    }

    public ASTMathFunction(fsParser p, int id) {
        super(p, id);
    }

    public void setName(String symbol) {
        super.symbol = symbol;
    }

    /*
     * (non-Javadoc)
     * 
     * @see math4u2.view.parser.SimpleNode#bakeComponents(math4u2.view.parser.Node)
     */
    public void bakeComponents(AtomicBox ab) {
        FormulaRenderContext frc = ab.getRenderContext();
        if (symbol.equals("log")) {
            IndexedBox ib = new IndexedBox(frc);
            ib.add(new OpBox(frc, symbol), IndexLayout.CENTER);
            ContainerBox cb = new ContainerBox(frc);
            jjtGetChild(0).bakeComponents(cb);
            ib.add(cb, IndexLayout.RIGHT_BOTTOM);
            ab.add(ib);
            jjtGetChild(1).bakeComponents(ab);
        } else {
            ab.add(new OpBox(frc, symbol));
            if (jjtGetNumChildren() > 0) {
                BracketedBox bb = new BracketedBox(frc);
                jjtGetChild(0).bakeComponents(bb);
                ab.add(bb);
            }
        }
    }

    /*
     * (non-Javadoc)
     * 
     * @see math4u2.parser.formula.parserNodes.SimpleNode#toString()
     */
    public String toString() {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < jjtGetNumChildren(); i++) {
            sb.append(jjtGetChild(i).toString());
            if (i < children.length - 1)
                sb.append(",");
        }
        if (jjtGetNumChildren() == 0) {
            return symbol;
        } else
            return symbol + "(" + sb.toString() + ")";
    }
}